name: CI Pipeline

on:
  push:
    branches: ["master"]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "pip"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install flake8 pytest allure-pytest

    - name: Install Chrome & Chromedriver
      run: |
        google-chrome --version
        chromedriver --version

    - name: Start docker services (webshop)
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./sprint-1/compose.yaml"

    - name: Wait for backend & frontend readiness
      run: |
        echo "Waiting for backend..."
        for i in {1..30}; do
          if curl -s http://localhost:8080 > /dev/null; then
            echo "Backend is up!"
            break
          fi
          echo "Backend not ready yet..."
          sleep 2
        done

        echo "Waiting for frontend..."
        for i in {1..30}; do
          if curl -s http://localhost:4200 > /dev/null; then
            echo "Frontend is up!"
            break
          fi
          echo "Frontend not ready yet..."
          sleep 2
        done

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Wait for frontend UI to render
      run: |
        echo "Waiting for Angular to finish rendering..."
        for i in {1..40}; do
          if curl -s http://localhost:4200 | grep -q "mat-card"; then
            echo "UI is ready!"
            break
          fi
          echo "UI not ready yet..."
          sleep 3
        done

    - name: Run Selenium tests & collect Allure results
      run: |
        pytest ./sprint-1 --alluredir=./reports/allure-results

    - name: Generate Allure report history
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: ./reports/allure-results
        allure_history: ./reports/allure-history
        keep_reports: 50

    - name: Deploy Allure report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PUBLISH_BRANCH: gh-pages
        PUBLISH_DIR: ./reports/allure-history